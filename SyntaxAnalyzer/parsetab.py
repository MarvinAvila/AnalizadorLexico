
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programaleftANDORleftSUMARESTAleftMULTIPLICACIONDIVISIONrightNOTleftASIGNACIONleftPUNTO_COMAnonassocMAYOR_QUEMENOR_QUEMAYOR_IGUALMENOR_IGUALIGUAL_IGUALDIFERENTEAND ASIGNACION COMA CON_PASO DESDE DIFERENTE DIVISION ENTONCES FIN FIN_MIENTRAS FIN_PARA FIN_SI HACER HASTA HASTA_QUE IDENTIFICADOR IGUAL_IGUAL INICIO LITERAL_BOOLEANO LITERAL_CADENA LITERAL_DECIMAL LITERAL_ENTERO MAYOR_IGUAL MAYOR_QUE MENOR_IGUAL MENOR_QUE MIENTRAS MOSTRAR MULTIPLICACION NOT OR PARA PARENTESIS_DER PARENTESIS_IZQ PUNTO_COMA REPETIR RESTA SI SINO SUMA TIPOprograma : INICIO declaraciones FINdeclaraciones : declaraciones declaracion_simple\n| declaraciones declaracion_con_asignacion\n| declaraciones constante\n| declaraciones asignacion\n| declaraciones sentencia_if\n| declaraciones sentencia_mientras\n| declaraciones sentencia_para\n| declaraciones sentencia_repetir\n| declaraciones sentencia_mostrar\n| emptyempty :sentencia_if : SI PARENTESIS_IZQ expresion PARENTESIS_DER ENTONCES declaraciones FIN_SI\n| SI PARENTESIS_IZQ expresion PARENTESIS_DER ENTONCES declaraciones SINO declaraciones FIN_SIsentencia_mientras : MIENTRAS PARENTESIS_IZQ expresion PARENTESIS_DER HACER declaraciones FIN_MIENTRASsentencia_para : PARA TIPO IDENTIFICADOR DESDE expresion HASTA expresion HACER declaraciones FIN_PARA\n| PARA TIPO IDENTIFICADOR DESDE expresion HASTA expresion CON_PASO expresion HACER declaraciones FIN_PARAsentencia_repetir : REPETIR declaraciones HASTA_QUE PARENTESIS_IZQ expresion PARENTESIS_DER PUNTO_COMAsentencia_mostrar : MOSTRAR lista_expresiones PUNTO_COMAexpresion : LITERAL_ENTERO\n| LITERAL_DECIMAL\n| LITERAL_CADENA\n| LITERAL_BOOLEANO\n| IDENTIFICADOR\n| expresion SUMA expresion\n| expresion RESTA expresion\n| expresion MULTIPLICACION expresion\n| expresion DIVISION expresion\n| expresion AND expresion\n| expresion OR expresion\n| NOT expresion\n| expresion MAYOR_QUE expresion\n| expresion MENOR_QUE expresion\n| expresion MAYOR_IGUAL expresion\n| expresion MENOR_IGUAL expresion\n| expresion IGUAL_IGUAL expresion\n| expresion DIFERENTE expresionlista_expresiones : lista_expresiones COMA expresion\n| expresiondeclaracion_simple : TIPO IDENTIFICADOR PUNTO_COMAdeclaracion_con_asignacion : TIPO IDENTIFICADOR ASIGNACION expresion PUNTO_COMAasignacion : IDENTIFICADOR ASIGNACION expresion PUNTO_COMAconstante : TIPO IDENTIFICADOR ASIGNACION expresion'
    
_lr_action_items = {'INICIO':([0,],[2,]),'$end':([1,5,],[0,-1,]),'FIN':([2,3,4,6,7,8,9,10,11,12,13,14,30,31,32,33,34,36,43,57,58,59,65,66,67,68,69,70,71,72,73,74,75,76,77,86,88,90,94,97,100,],[-12,5,-11,-2,-3,-4,-5,-6,-7,-8,-9,-10,-20,-21,-22,-23,-24,-40,-19,-31,-43,-42,-25,-26,-27,-28,-29,-30,-32,-33,-34,-35,-36,-37,-41,-13,-15,-18,-14,-16,-17,]),'TIPO':([2,3,4,6,7,8,9,10,11,12,13,14,19,20,27,30,31,32,33,34,36,43,57,58,59,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,86,87,88,90,91,92,94,95,97,98,99,100,],[-12,15,-11,-2,-3,-4,-5,-6,-7,-8,-9,-10,26,-12,15,-20,-21,-22,-23,-24,-40,-19,-31,-43,-42,-25,-26,-27,-28,-29,-30,-32,-33,-34,-35,-36,-37,-41,-12,-12,15,15,-13,-12,-15,-18,15,-12,-14,15,-16,-12,15,-17,]),'IDENTIFICADOR':([2,3,4,6,7,8,9,10,11,12,13,14,15,20,21,23,24,25,26,27,30,31,32,33,34,35,36,37,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,84,86,87,88,90,91,92,93,94,95,97,98,99,100,],[-12,16,-11,-2,-3,-4,-5,-6,-7,-8,-9,-10,22,-12,34,34,34,34,41,16,-20,-21,-22,-23,-24,34,-40,34,-19,34,34,34,34,34,34,34,34,34,34,34,34,34,-31,-43,-42,34,34,-25,-26,-27,-28,-29,-30,-32,-33,-34,-35,-36,-37,-41,-12,-12,16,16,34,-13,-12,-15,-18,16,-12,34,-14,16,-16,-12,16,-17,]),'SI':([2,3,4,6,7,8,9,10,11,12,13,14,20,27,30,31,32,33,34,36,43,57,58,59,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,86,87,88,90,91,92,94,95,97,98,99,100,],[-12,17,-11,-2,-3,-4,-5,-6,-7,-8,-9,-10,-12,17,-20,-21,-22,-23,-24,-40,-19,-31,-43,-42,-25,-26,-27,-28,-29,-30,-32,-33,-34,-35,-36,-37,-41,-12,-12,17,17,-13,-12,-15,-18,17,-12,-14,17,-16,-12,17,-17,]),'MIENTRAS':([2,3,4,6,7,8,9,10,11,12,13,14,20,27,30,31,32,33,34,36,43,57,58,59,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,86,87,88,90,91,92,94,95,97,98,99,100,],[-12,18,-11,-2,-3,-4,-5,-6,-7,-8,-9,-10,-12,18,-20,-21,-22,-23,-24,-40,-19,-31,-43,-42,-25,-26,-27,-28,-29,-30,-32,-33,-34,-35,-36,-37,-41,-12,-12,18,18,-13,-12,-15,-18,18,-12,-14,18,-16,-12,18,-17,]),'PARA':([2,3,4,6,7,8,9,10,11,12,13,14,20,27,30,31,32,33,34,36,43,57,58,59,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,86,87,88,90,91,92,94,95,97,98,99,100,],[-12,19,-11,-2,-3,-4,-5,-6,-7,-8,-9,-10,-12,19,-20,-21,-22,-23,-24,-40,-19,-31,-43,-42,-25,-26,-27,-28,-29,-30,-32,-33,-34,-35,-36,-37,-41,-12,-12,19,19,-13,-12,-15,-18,19,-12,-14,19,-16,-12,19,-17,]),'REPETIR':([2,3,4,6,7,8,9,10,11,12,13,14,20,27,30,31,32,33,34,36,43,57,58,59,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,86,87,88,90,91,92,94,95,97,98,99,100,],[-12,20,-11,-2,-3,-4,-5,-6,-7,-8,-9,-10,-12,20,-20,-21,-22,-23,-24,-40,-19,-31,-43,-42,-25,-26,-27,-28,-29,-30,-32,-33,-34,-35,-36,-37,-41,-12,-12,20,20,-13,-12,-15,-18,20,-12,-14,20,-16,-12,20,-17,]),'MOSTRAR':([2,3,4,6,7,8,9,10,11,12,13,14,20,27,30,31,32,33,34,36,43,57,58,59,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,86,87,88,90,91,92,94,95,97,98,99,100,],[-12,21,-11,-2,-3,-4,-5,-6,-7,-8,-9,-10,-12,21,-20,-21,-22,-23,-24,-40,-19,-31,-43,-42,-25,-26,-27,-28,-29,-30,-32,-33,-34,-35,-36,-37,-41,-12,-12,21,21,-13,-12,-15,-18,21,-12,-14,21,-16,-12,21,-17,]),'HASTA_QUE':([4,6,7,8,9,10,11,12,13,14,20,27,30,31,32,33,34,36,43,57,58,59,65,66,67,68,69,70,71,72,73,74,75,76,77,86,88,90,94,97,100,],[-11,-2,-3,-4,-5,-6,-7,-8,-9,-10,-12,42,-20,-21,-22,-23,-24,-40,-19,-31,-43,-42,-25,-26,-27,-28,-29,-30,-32,-33,-34,-35,-36,-37,-41,-13,-15,-18,-14,-16,-17,]),'FIN_SI':([4,6,7,8,9,10,11,12,13,14,30,31,32,33,34,36,43,57,58,59,65,66,67,68,69,70,71,72,73,74,75,76,77,78,82,86,87,88,90,91,94,97,100,],[-11,-2,-3,-4,-5,-6,-7,-8,-9,-10,-20,-21,-22,-23,-24,-40,-19,-31,-43,-42,-25,-26,-27,-28,-29,-30,-32,-33,-34,-35,-36,-37,-41,-12,86,-13,-12,-15,-18,94,-14,-16,-17,]),'SINO':([4,6,7,8,9,10,11,12,13,14,30,31,32,33,34,36,43,57,58,59,65,66,67,68,69,70,71,72,73,74,75,76,77,78,82,86,88,90,94,97,100,],[-11,-2,-3,-4,-5,-6,-7,-8,-9,-10,-20,-21,-22,-23,-24,-40,-19,-31,-43,-42,-25,-26,-27,-28,-29,-30,-32,-33,-34,-35,-36,-37,-41,-12,87,-13,-15,-18,-14,-16,-17,]),'FIN_MIENTRAS':([4,6,7,8,9,10,11,12,13,14,30,31,32,33,34,36,43,57,58,59,65,66,67,68,69,70,71,72,73,74,75,76,77,79,83,86,88,90,94,97,100,],[-11,-2,-3,-4,-5,-6,-7,-8,-9,-10,-20,-21,-22,-23,-24,-40,-19,-31,-43,-42,-25,-26,-27,-28,-29,-30,-32,-33,-34,-35,-36,-37,-41,-12,88,-13,-15,-18,-14,-16,-17,]),'FIN_PARA':([4,6,7,8,9,10,11,12,13,14,30,31,32,33,34,36,43,57,58,59,65,66,67,68,69,70,71,72,73,74,75,76,77,86,88,90,92,94,95,97,98,99,100,],[-11,-2,-3,-4,-5,-6,-7,-8,-9,-10,-20,-21,-22,-23,-24,-40,-19,-31,-43,-42,-25,-26,-27,-28,-29,-30,-32,-33,-34,-35,-36,-37,-41,-13,-15,-18,-12,-14,97,-16,-12,100,-17,]),'ASIGNACION':([16,22,],[23,37,]),'PARENTESIS_IZQ':([17,18,42,],[24,25,63,]),'LITERAL_ENTERO':([21,23,24,25,35,37,44,45,46,47,48,49,50,51,52,53,54,55,56,62,63,84,93,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'LITERAL_DECIMAL':([21,23,24,25,35,37,44,45,46,47,48,49,50,51,52,53,54,55,56,62,63,84,93,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'LITERAL_CADENA':([21,23,24,25,35,37,44,45,46,47,48,49,50,51,52,53,54,55,56,62,63,84,93,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'LITERAL_BOOLEANO':([21,23,24,25,35,37,44,45,46,47,48,49,50,51,52,53,54,55,56,62,63,84,93,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'NOT':([21,23,24,25,35,37,44,45,46,47,48,49,50,51,52,53,54,55,56,62,63,84,93,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'PUNTO_COMA':([22,28,29,30,31,32,33,34,38,57,58,64,65,66,67,68,69,70,71,72,73,74,75,76,85,],[36,43,-39,-20,-21,-22,-23,-24,59,-31,77,-38,-25,-26,-27,-28,-29,-30,-32,-33,-34,-35,-36,-37,90,]),'COMA':([28,29,30,31,32,33,34,57,64,65,66,67,68,69,70,71,72,73,74,75,76,],[44,-39,-20,-21,-22,-23,-24,-31,-38,-25,-26,-27,-28,-29,-30,-32,-33,-34,-35,-36,-37,]),'SUMA':([29,30,31,32,33,34,38,39,40,57,58,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,89,96,],[45,-20,-21,-22,-23,-24,45,45,45,-31,45,45,-25,-26,-27,-28,45,45,-32,-33,-34,-35,-36,-37,45,45,45,45,]),'RESTA':([29,30,31,32,33,34,38,39,40,57,58,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,89,96,],[46,-20,-21,-22,-23,-24,46,46,46,-31,46,46,-25,-26,-27,-28,46,46,-32,-33,-34,-35,-36,-37,46,46,46,46,]),'MULTIPLICACION':([29,30,31,32,33,34,38,39,40,57,58,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,89,96,],[47,-20,-21,-22,-23,-24,47,47,47,-31,47,47,47,47,-27,-28,47,47,-32,-33,-34,-35,-36,-37,47,47,47,47,]),'DIVISION':([29,30,31,32,33,34,38,39,40,57,58,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,89,96,],[48,-20,-21,-22,-23,-24,48,48,48,-31,48,48,48,48,-27,-28,48,48,-32,-33,-34,-35,-36,-37,48,48,48,48,]),'AND':([29,30,31,32,33,34,38,39,40,57,58,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,89,96,],[49,-20,-21,-22,-23,-24,49,49,49,-31,49,49,-25,-26,-27,-28,-29,-30,-32,-33,-34,-35,-36,-37,49,49,49,49,]),'OR':([29,30,31,32,33,34,38,39,40,57,58,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,89,96,],[50,-20,-21,-22,-23,-24,50,50,50,-31,50,50,-25,-26,-27,-28,-29,-30,-32,-33,-34,-35,-36,-37,50,50,50,50,]),'MAYOR_QUE':([29,30,31,32,33,34,38,39,40,57,58,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,89,96,],[51,-20,-21,-22,-23,-24,51,51,51,51,51,51,51,51,51,51,51,51,None,None,None,None,None,None,51,51,51,51,]),'MENOR_QUE':([29,30,31,32,33,34,38,39,40,57,58,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,89,96,],[52,-20,-21,-22,-23,-24,52,52,52,52,52,52,52,52,52,52,52,52,None,None,None,None,None,None,52,52,52,52,]),'MAYOR_IGUAL':([29,30,31,32,33,34,38,39,40,57,58,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,89,96,],[53,-20,-21,-22,-23,-24,53,53,53,53,53,53,53,53,53,53,53,53,None,None,None,None,None,None,53,53,53,53,]),'MENOR_IGUAL':([29,30,31,32,33,34,38,39,40,57,58,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,89,96,],[54,-20,-21,-22,-23,-24,54,54,54,54,54,54,54,54,54,54,54,54,None,None,None,None,None,None,54,54,54,54,]),'IGUAL_IGUAL':([29,30,31,32,33,34,38,39,40,57,58,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,89,96,],[55,-20,-21,-22,-23,-24,55,55,55,55,55,55,55,55,55,55,55,55,None,None,None,None,None,None,55,55,55,55,]),'DIFERENTE':([29,30,31,32,33,34,38,39,40,57,58,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,89,96,],[56,-20,-21,-22,-23,-24,56,56,56,56,56,56,56,56,56,56,56,56,None,None,None,None,None,None,56,56,56,56,]),'PARENTESIS_DER':([30,31,32,33,34,39,40,57,65,66,67,68,69,70,71,72,73,74,75,76,81,],[-20,-21,-22,-23,-24,60,61,-31,-25,-26,-27,-28,-29,-30,-32,-33,-34,-35,-36,-37,85,]),'HASTA':([30,31,32,33,34,57,65,66,67,68,69,70,71,72,73,74,75,76,80,],[-20,-21,-22,-23,-24,-31,-25,-26,-27,-28,-29,-30,-32,-33,-34,-35,-36,-37,84,]),'HACER':([30,31,32,33,34,57,61,65,66,67,68,69,70,71,72,73,74,75,76,89,96,],[-20,-21,-22,-23,-24,-31,79,-25,-26,-27,-28,-29,-30,-32,-33,-34,-35,-36,-37,92,98,]),'CON_PASO':([30,31,32,33,34,57,65,66,67,68,69,70,71,72,73,74,75,76,89,],[-20,-21,-22,-23,-24,-31,-25,-26,-27,-28,-29,-30,-32,-33,-34,-35,-36,-37,93,]),'DESDE':([41,],[62,]),'ENTONCES':([60,],[78,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'declaraciones':([2,20,78,79,87,92,98,],[3,27,82,83,91,95,99,]),'empty':([2,20,78,79,87,92,98,],[4,4,4,4,4,4,4,]),'declaracion_simple':([3,27,82,83,91,95,99,],[6,6,6,6,6,6,6,]),'declaracion_con_asignacion':([3,27,82,83,91,95,99,],[7,7,7,7,7,7,7,]),'constante':([3,27,82,83,91,95,99,],[8,8,8,8,8,8,8,]),'asignacion':([3,27,82,83,91,95,99,],[9,9,9,9,9,9,9,]),'sentencia_if':([3,27,82,83,91,95,99,],[10,10,10,10,10,10,10,]),'sentencia_mientras':([3,27,82,83,91,95,99,],[11,11,11,11,11,11,11,]),'sentencia_para':([3,27,82,83,91,95,99,],[12,12,12,12,12,12,12,]),'sentencia_repetir':([3,27,82,83,91,95,99,],[13,13,13,13,13,13,13,]),'sentencia_mostrar':([3,27,82,83,91,95,99,],[14,14,14,14,14,14,14,]),'lista_expresiones':([21,],[28,]),'expresion':([21,23,24,25,35,37,44,45,46,47,48,49,50,51,52,53,54,55,56,62,63,84,93,],[29,38,39,40,57,58,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,89,96,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> INICIO declaraciones FIN','programa',3,'p_programa','Parser.py',19),
  ('declaraciones -> declaraciones declaracion_simple','declaraciones',2,'p_declaraciones','Parser.py',28),
  ('declaraciones -> declaraciones declaracion_con_asignacion','declaraciones',2,'p_declaraciones','Parser.py',29),
  ('declaraciones -> declaraciones constante','declaraciones',2,'p_declaraciones','Parser.py',30),
  ('declaraciones -> declaraciones asignacion','declaraciones',2,'p_declaraciones','Parser.py',31),
  ('declaraciones -> declaraciones sentencia_if','declaraciones',2,'p_declaraciones','Parser.py',32),
  ('declaraciones -> declaraciones sentencia_mientras','declaraciones',2,'p_declaraciones','Parser.py',33),
  ('declaraciones -> declaraciones sentencia_para','declaraciones',2,'p_declaraciones','Parser.py',34),
  ('declaraciones -> declaraciones sentencia_repetir','declaraciones',2,'p_declaraciones','Parser.py',35),
  ('declaraciones -> declaraciones sentencia_mostrar','declaraciones',2,'p_declaraciones','Parser.py',36),
  ('declaraciones -> empty','declaraciones',1,'p_declaraciones','Parser.py',37),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',45),
  ('sentencia_if -> SI PARENTESIS_IZQ expresion PARENTESIS_DER ENTONCES declaraciones FIN_SI','sentencia_if',7,'p_sentencia_if','Parser.py',52),
  ('sentencia_if -> SI PARENTESIS_IZQ expresion PARENTESIS_DER ENTONCES declaraciones SINO declaraciones FIN_SI','sentencia_if',9,'p_sentencia_if','Parser.py',53),
  ('sentencia_mientras -> MIENTRAS PARENTESIS_IZQ expresion PARENTESIS_DER HACER declaraciones FIN_MIENTRAS','sentencia_mientras',7,'p_sentencia_mientras','Parser.py',68),
  ('sentencia_para -> PARA TIPO IDENTIFICADOR DESDE expresion HASTA expresion HACER declaraciones FIN_PARA','sentencia_para',10,'p_sentencia_para','Parser.py',80),
  ('sentencia_para -> PARA TIPO IDENTIFICADOR DESDE expresion HASTA expresion CON_PASO expresion HACER declaraciones FIN_PARA','sentencia_para',12,'p_sentencia_para','Parser.py',81),
  ('sentencia_repetir -> REPETIR declaraciones HASTA_QUE PARENTESIS_IZQ expresion PARENTESIS_DER PUNTO_COMA','sentencia_repetir',7,'p_sentencia_repetir','Parser.py',117),
  ('sentencia_mostrar -> MOSTRAR lista_expresiones PUNTO_COMA','sentencia_mostrar',3,'p_sentencia_mostrar','Parser.py',129),
  ('expresion -> LITERAL_ENTERO','expresion',1,'p_expresion','Parser.py',139),
  ('expresion -> LITERAL_DECIMAL','expresion',1,'p_expresion','Parser.py',140),
  ('expresion -> LITERAL_CADENA','expresion',1,'p_expresion','Parser.py',141),
  ('expresion -> LITERAL_BOOLEANO','expresion',1,'p_expresion','Parser.py',142),
  ('expresion -> IDENTIFICADOR','expresion',1,'p_expresion','Parser.py',143),
  ('expresion -> expresion SUMA expresion','expresion',3,'p_expresion','Parser.py',144),
  ('expresion -> expresion RESTA expresion','expresion',3,'p_expresion','Parser.py',145),
  ('expresion -> expresion MULTIPLICACION expresion','expresion',3,'p_expresion','Parser.py',146),
  ('expresion -> expresion DIVISION expresion','expresion',3,'p_expresion','Parser.py',147),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion','Parser.py',148),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion','Parser.py',149),
  ('expresion -> NOT expresion','expresion',2,'p_expresion','Parser.py',150),
  ('expresion -> expresion MAYOR_QUE expresion','expresion',3,'p_expresion','Parser.py',151),
  ('expresion -> expresion MENOR_QUE expresion','expresion',3,'p_expresion','Parser.py',152),
  ('expresion -> expresion MAYOR_IGUAL expresion','expresion',3,'p_expresion','Parser.py',153),
  ('expresion -> expresion MENOR_IGUAL expresion','expresion',3,'p_expresion','Parser.py',154),
  ('expresion -> expresion IGUAL_IGUAL expresion','expresion',3,'p_expresion','Parser.py',155),
  ('expresion -> expresion DIFERENTE expresion','expresion',3,'p_expresion','Parser.py',156),
  ('lista_expresiones -> lista_expresiones COMA expresion','lista_expresiones',3,'p_lista_expresiones','Parser.py',201),
  ('lista_expresiones -> expresion','lista_expresiones',1,'p_lista_expresiones','Parser.py',202),
  ('declaracion_simple -> TIPO IDENTIFICADOR PUNTO_COMA','declaracion_simple',3,'p_declaracion_simple','Parser.py',213),
  ('declaracion_con_asignacion -> TIPO IDENTIFICADOR ASIGNACION expresion PUNTO_COMA','declaracion_con_asignacion',5,'p_declaracion_con_asignacion','Parser.py',224),
  ('asignacion -> IDENTIFICADOR ASIGNACION expresion PUNTO_COMA','asignacion',4,'p_asignacion','Parser.py',247),
  ('constante -> TIPO IDENTIFICADOR ASIGNACION expresion','constante',4,'p_constante','Parser.py',269),
]
