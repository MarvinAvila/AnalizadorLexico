
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programaleftORleftANDrightNOTleftSUMARESTAleftMULTIPLICACIONDIVISIONMODULOnonassocMAYOR_QUEMENOR_QUEMAYOR_IGUALMENOR_IGUALIGUAL_IGUALDIFERENTEAND ASIGNACION COMA CONSTANTE CON_PASO DESDE DIFERENTE DIVISION ENTONCES FIN FIN_MIENTRAS FIN_PARA FIN_SI HACER HASTA HASTA_QUE IDENTIFICADOR IGUAL_IGUAL INICIO LITERAL_BOOLEANO LITERAL_CADENA LITERAL_DECIMAL LITERAL_ENTERO MAYOR_IGUAL MAYOR_QUE MENOR_IGUAL MENOR_QUE MIENTRAS MODULO MOSTRAR MULTIPLICACION NOT OR PARA PARENTESIS_DER PARENTESIS_IZQ PUNTO_COMA REPETIR RESTA SI SINO SUMA TIPOprograma : INICIO declaraciones FINdeclaraciones : declaraciones declaracion\n| declaraciondeclaracion : declaracion_simple\n| declaracion_con_asignacion\n| asignacion\n| constante\n| sentencia_if\n| sentencia_mientras\n| sentencia_para\n| sentencia_repetir\n| sentencia_mostrar\n| emptyempty :sentencia_if : SI PARENTESIS_IZQ expresion PARENTESIS_DER ENTONCES declaraciones FIN_SI\n| SI PARENTESIS_IZQ expresion PARENTESIS_DER ENTONCES declaraciones SINO declaraciones FIN_SIsentencia_mientras : MIENTRAS PARENTESIS_IZQ expresion PARENTESIS_DER HACER declaraciones FIN_MIENTRASsentencia_para : PARA IDENTIFICADOR DESDE expresion HASTA expresion HACER declaraciones FIN_PARA\n| PARA IDENTIFICADOR DESDE expresion HASTA expresion CON_PASO expresion HACER declaraciones FIN_PARAinstrucciones_para : instruccion_para\n| instrucciones_para instruccion_parainstruccion_para : sentencia_mostrar\n| asignacion\n| sentencia_if\n| sentencia_mientrassentencia_repetir : REPETIR declaraciones HASTA_QUE PARENTESIS_IZQ expresion PARENTESIS_DER PUNTO_COMAsentencia_mostrar : MOSTRAR lista_expresiones PUNTO_COMAexpresion : expresion SUMA expresion\n| expresion RESTA expresion\n| expresion MULTIPLICACION expresion\n| expresion DIVISION expresion\n| expresion MODULO expresion\n| expresion AND expresion\n| expresion OR expresion\n| expresion MAYOR_QUE expresion\n| expresion MENOR_QUE expresion\n| expresion MAYOR_IGUAL expresion\n| expresion MENOR_IGUAL expresion\n| expresion IGUAL_IGUAL expresion\n| expresion DIFERENTE expresionexpresion : NOT expresionexpresion : PARENTESIS_IZQ expresion PARENTESIS_DERexpresion : LITERAL_ENTERO\n| LITERAL_DECIMAL\n| LITERAL_CADENA\n| LITERAL_BOOLEANOexpresion : IDENTIFICADORlista_expresiones : lista_expresiones COMA expresion\n| expresiondeclaracion_simple : TIPO IDENTIFICADOR PUNTO_COMAdeclaracion_con_asignacion : TIPO IDENTIFICADOR ASIGNACION expresion PUNTO_COMAasignacion : IDENTIFICADOR ASIGNACION expresion PUNTO_COMAconstante : CONSTANTE IDENTIFICADOR ASIGNACION expresion PUNTO_COMA'
    
_lr_action_items = {'INICIO':([0,],[2,]),'$end':([1,23,],[0,-1,]),'TIPO':([2,3,4,5,6,7,8,9,10,11,12,13,14,21,24,31,41,49,67,88,89,90,91,94,95,98,99,100,101,103,104,105,107,108,109,110,111,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,15,-2,15,-50,-27,-52,-51,-53,15,15,15,15,-15,15,-17,15,-26,15,15,-16,-18,15,15,-19,]),'IDENTIFICADOR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,20,21,22,24,26,28,29,31,34,35,41,42,44,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,67,72,88,89,90,91,92,94,95,98,99,100,101,102,103,104,105,107,108,109,110,111,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,25,27,30,16,40,-2,40,40,40,16,40,40,-50,40,40,40,-27,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-52,40,-51,-53,16,16,40,16,16,-15,16,-17,16,40,-26,16,16,-16,-18,16,16,-19,]),'CONSTANTE':([2,3,4,5,6,7,8,9,10,11,12,13,14,21,24,31,41,49,67,88,89,90,91,94,95,98,99,100,101,103,104,105,107,108,109,110,111,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,17,-2,17,-50,-27,-52,-51,-53,17,17,17,17,-15,17,-17,17,-26,17,17,-16,-18,17,17,-19,]),'SI':([2,3,4,5,6,7,8,9,10,11,12,13,14,21,24,31,41,49,67,88,89,90,91,94,95,98,99,100,101,103,104,105,107,108,109,110,111,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,18,-2,18,-50,-27,-52,-51,-53,18,18,18,18,-15,18,-17,18,-26,18,18,-16,-18,18,18,-19,]),'MIENTRAS':([2,3,4,5,6,7,8,9,10,11,12,13,14,21,24,31,41,49,67,88,89,90,91,94,95,98,99,100,101,103,104,105,107,108,109,110,111,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,19,-2,19,-50,-27,-52,-51,-53,19,19,19,19,-15,19,-17,19,-26,19,19,-16,-18,19,19,-19,]),'PARA':([2,3,4,5,6,7,8,9,10,11,12,13,14,21,24,31,41,49,67,88,89,90,91,94,95,98,99,100,101,103,104,105,107,108,109,110,111,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,20,-2,20,-50,-27,-52,-51,-53,20,20,20,20,-15,20,-17,20,-26,20,20,-16,-18,20,20,-19,]),'REPETIR':([2,3,4,5,6,7,8,9,10,11,12,13,14,21,24,31,41,49,67,88,89,90,91,94,95,98,99,100,101,103,104,105,107,108,109,110,111,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,21,-2,21,-50,-27,-52,-51,-53,21,21,21,21,-15,21,-17,21,-26,21,21,-16,-18,21,21,-19,]),'MOSTRAR':([2,3,4,5,6,7,8,9,10,11,12,13,14,21,24,31,41,49,67,88,89,90,91,94,95,98,99,100,101,103,104,105,107,108,109,110,111,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,22,-2,22,-50,-27,-52,-51,-53,22,22,22,22,-15,22,-17,22,-26,22,22,-16,-18,22,22,-19,]),'FIN':([2,3,4,5,6,7,8,9,10,11,12,13,14,24,41,49,67,88,89,98,100,103,107,108,111,],[-14,23,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-2,-50,-27,-52,-51,-53,-15,-17,-26,-16,-18,-19,]),'HASTA_QUE':([4,5,6,7,8,9,10,11,12,13,14,21,24,31,41,49,67,88,89,98,100,103,107,108,111,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-2,48,-50,-27,-52,-51,-53,-15,-17,-26,-16,-18,-19,]),'FIN_SI':([4,5,6,7,8,9,10,11,12,13,14,24,41,49,67,88,89,90,94,98,99,100,103,104,107,108,111,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-2,-50,-27,-52,-51,-53,-14,98,-15,-14,-17,-26,107,-16,-18,-19,]),'SINO':([4,5,6,7,8,9,10,11,12,13,14,24,41,49,67,88,89,90,94,98,100,103,107,108,111,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-2,-50,-27,-52,-51,-53,-14,99,-15,-17,-26,-16,-18,-19,]),'FIN_MIENTRAS':([4,5,6,7,8,9,10,11,12,13,14,24,41,49,67,88,89,91,95,98,100,103,107,108,111,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-2,-50,-27,-52,-51,-53,-14,100,-15,-17,-26,-16,-18,-19,]),'FIN_PARA':([4,5,6,7,8,9,10,11,12,13,14,24,41,49,67,88,89,98,100,101,103,105,107,108,109,110,111,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-2,-50,-27,-52,-51,-53,-15,-17,-14,-26,108,-16,-18,-14,111,-19,]),'ASIGNACION':([16,25,27,],[26,42,44,]),'PARENTESIS_IZQ':([18,19,22,26,28,29,34,35,42,44,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,72,92,102,],[28,29,35,35,35,35,35,35,35,35,35,72,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'NOT':([22,26,28,29,34,35,42,44,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,72,92,102,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'LITERAL_ENTERO':([22,26,28,29,34,35,42,44,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,72,92,102,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'LITERAL_DECIMAL':([22,26,28,29,34,35,42,44,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,72,92,102,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'LITERAL_CADENA':([22,26,28,29,34,35,42,44,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,72,92,102,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'LITERAL_BOOLEANO':([22,26,28,29,34,35,42,44,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,72,92,102,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'PUNTO_COMA':([25,32,33,36,37,38,39,40,43,64,66,68,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,97,],[41,49,-49,-43,-44,-45,-46,-47,67,-41,88,89,-48,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-42,103,]),'DESDE':([30,],[47,]),'COMA':([32,33,36,37,38,39,40,64,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,],[50,-49,-43,-44,-45,-46,-47,-41,-48,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-42,]),'SUMA':([33,36,37,38,39,40,43,45,46,64,65,66,68,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,93,96,106,],[51,-43,-44,-45,-46,-47,51,51,51,51,51,51,51,51,51,-28,-29,-30,-31,-32,51,51,-35,-36,-37,-38,-39,-40,-42,51,51,51,]),'RESTA':([33,36,37,38,39,40,43,45,46,64,65,66,68,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,93,96,106,],[52,-43,-44,-45,-46,-47,52,52,52,52,52,52,52,52,52,-28,-29,-30,-31,-32,52,52,-35,-36,-37,-38,-39,-40,-42,52,52,52,]),'MULTIPLICACION':([33,36,37,38,39,40,43,45,46,64,65,66,68,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,93,96,106,],[53,-43,-44,-45,-46,-47,53,53,53,53,53,53,53,53,53,53,53,-30,-31,-32,53,53,-35,-36,-37,-38,-39,-40,-42,53,53,53,]),'DIVISION':([33,36,37,38,39,40,43,45,46,64,65,66,68,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,93,96,106,],[54,-43,-44,-45,-46,-47,54,54,54,54,54,54,54,54,54,54,54,-30,-31,-32,54,54,-35,-36,-37,-38,-39,-40,-42,54,54,54,]),'MODULO':([33,36,37,38,39,40,43,45,46,64,65,66,68,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,93,96,106,],[55,-43,-44,-45,-46,-47,55,55,55,55,55,55,55,55,55,55,55,-30,-31,-32,55,55,-35,-36,-37,-38,-39,-40,-42,55,55,55,]),'AND':([33,36,37,38,39,40,43,45,46,64,65,66,68,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,93,96,106,],[56,-43,-44,-45,-46,-47,56,56,56,-41,56,56,56,56,56,-28,-29,-30,-31,-32,-33,56,-35,-36,-37,-38,-39,-40,-42,56,56,56,]),'OR':([33,36,37,38,39,40,43,45,46,64,65,66,68,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,93,96,106,],[57,-43,-44,-45,-46,-47,57,57,57,-41,57,57,57,57,57,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-42,57,57,57,]),'MAYOR_QUE':([33,36,37,38,39,40,43,45,46,64,65,66,68,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,93,96,106,],[58,-43,-44,-45,-46,-47,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,None,None,None,None,None,None,-42,58,58,58,]),'MENOR_QUE':([33,36,37,38,39,40,43,45,46,64,65,66,68,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,93,96,106,],[59,-43,-44,-45,-46,-47,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,None,None,None,None,None,None,-42,59,59,59,]),'MAYOR_IGUAL':([33,36,37,38,39,40,43,45,46,64,65,66,68,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,93,96,106,],[60,-43,-44,-45,-46,-47,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,None,None,None,None,None,None,-42,60,60,60,]),'MENOR_IGUAL':([33,36,37,38,39,40,43,45,46,64,65,66,68,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,93,96,106,],[61,-43,-44,-45,-46,-47,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,None,None,None,None,None,None,-42,61,61,61,]),'IGUAL_IGUAL':([33,36,37,38,39,40,43,45,46,64,65,66,68,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,93,96,106,],[62,-43,-44,-45,-46,-47,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,None,None,None,None,None,None,-42,62,62,62,]),'DIFERENTE':([33,36,37,38,39,40,43,45,46,64,65,66,68,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,93,96,106,],[63,-43,-44,-45,-46,-47,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,None,None,None,None,None,None,-42,63,63,63,]),'PARENTESIS_DER':([36,37,38,39,40,45,46,64,65,74,75,76,77,78,79,80,81,82,83,84,85,86,87,93,],[-43,-44,-45,-46,-47,69,70,-41,87,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-42,97,]),'HASTA':([36,37,38,39,40,64,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,],[-43,-44,-45,-46,-47,-41,92,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-42,]),'HACER':([36,37,38,39,40,64,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,96,106,],[-43,-44,-45,-46,-47,-41,91,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-42,101,109,]),'CON_PASO':([36,37,38,39,40,64,74,75,76,77,78,79,80,81,82,83,84,85,86,87,96,],[-43,-44,-45,-46,-47,-41,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-42,102,]),'ENTONCES':([69,],[90,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'declaraciones':([2,21,90,91,99,101,109,],[3,31,94,95,104,105,110,]),'declaracion':([2,3,21,31,90,91,94,95,99,101,104,105,109,110,],[4,24,4,24,4,4,24,24,4,4,24,24,4,24,]),'declaracion_simple':([2,3,21,31,90,91,94,95,99,101,104,105,109,110,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'declaracion_con_asignacion':([2,3,21,31,90,91,94,95,99,101,104,105,109,110,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'asignacion':([2,3,21,31,90,91,94,95,99,101,104,105,109,110,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'constante':([2,3,21,31,90,91,94,95,99,101,104,105,109,110,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'sentencia_if':([2,3,21,31,90,91,94,95,99,101,104,105,109,110,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'sentencia_mientras':([2,3,21,31,90,91,94,95,99,101,104,105,109,110,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'sentencia_para':([2,3,21,31,90,91,94,95,99,101,104,105,109,110,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'sentencia_repetir':([2,3,21,31,90,91,94,95,99,101,104,105,109,110,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'sentencia_mostrar':([2,3,21,31,90,91,94,95,99,101,104,105,109,110,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'empty':([2,3,21,31,90,91,94,95,99,101,104,105,109,110,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'lista_expresiones':([22,],[32,]),'expresion':([22,26,28,29,34,35,42,44,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,72,92,102,],[33,43,45,46,64,65,66,68,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,93,96,106,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> INICIO declaraciones FIN','programa',3,'p_programa','Parser.py',44),
  ('declaraciones -> declaraciones declaracion','declaraciones',2,'p_declaraciones','Parser.py',53),
  ('declaraciones -> declaracion','declaraciones',1,'p_declaraciones','Parser.py',54),
  ('declaracion -> declaracion_simple','declaracion',1,'p_declaracion','Parser.py',61),
  ('declaracion -> declaracion_con_asignacion','declaracion',1,'p_declaracion','Parser.py',62),
  ('declaracion -> asignacion','declaracion',1,'p_declaracion','Parser.py',63),
  ('declaracion -> constante','declaracion',1,'p_declaracion','Parser.py',64),
  ('declaracion -> sentencia_if','declaracion',1,'p_declaracion','Parser.py',65),
  ('declaracion -> sentencia_mientras','declaracion',1,'p_declaracion','Parser.py',66),
  ('declaracion -> sentencia_para','declaracion',1,'p_declaracion','Parser.py',67),
  ('declaracion -> sentencia_repetir','declaracion',1,'p_declaracion','Parser.py',68),
  ('declaracion -> sentencia_mostrar','declaracion',1,'p_declaracion','Parser.py',69),
  ('declaracion -> empty','declaracion',1,'p_declaracion','Parser.py',70),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',76),
  ('sentencia_if -> SI PARENTESIS_IZQ expresion PARENTESIS_DER ENTONCES declaraciones FIN_SI','sentencia_if',7,'p_sentencia_if','Parser.py',84),
  ('sentencia_if -> SI PARENTESIS_IZQ expresion PARENTESIS_DER ENTONCES declaraciones SINO declaraciones FIN_SI','sentencia_if',9,'p_sentencia_if','Parser.py',85),
  ('sentencia_mientras -> MIENTRAS PARENTESIS_IZQ expresion PARENTESIS_DER HACER declaraciones FIN_MIENTRAS','sentencia_mientras',7,'p_sentencia_mientras','Parser.py',95),
  ('sentencia_para -> PARA IDENTIFICADOR DESDE expresion HASTA expresion HACER declaraciones FIN_PARA','sentencia_para',9,'p_sentencia_para','Parser.py',104),
  ('sentencia_para -> PARA IDENTIFICADOR DESDE expresion HASTA expresion CON_PASO expresion HACER declaraciones FIN_PARA','sentencia_para',11,'p_sentencia_para','Parser.py',105),
  ('instrucciones_para -> instruccion_para','instrucciones_para',1,'p_instrucciones_para','Parser.py',125),
  ('instrucciones_para -> instrucciones_para instruccion_para','instrucciones_para',2,'p_instrucciones_para','Parser.py',126),
  ('instruccion_para -> sentencia_mostrar','instruccion_para',1,'p_instruccion_para','Parser.py',134),
  ('instruccion_para -> asignacion','instruccion_para',1,'p_instruccion_para','Parser.py',135),
  ('instruccion_para -> sentencia_if','instruccion_para',1,'p_instruccion_para','Parser.py',136),
  ('instruccion_para -> sentencia_mientras','instruccion_para',1,'p_instruccion_para','Parser.py',137),
  ('sentencia_repetir -> REPETIR declaraciones HASTA_QUE PARENTESIS_IZQ expresion PARENTESIS_DER PUNTO_COMA','sentencia_repetir',7,'p_sentencia_repetir','Parser.py',142),
  ('sentencia_mostrar -> MOSTRAR lista_expresiones PUNTO_COMA','sentencia_mostrar',3,'p_sentencia_mostrar','Parser.py',150),
  ('expresion -> expresion SUMA expresion','expresion',3,'p_expresion_binaria','Parser.py',160),
  ('expresion -> expresion RESTA expresion','expresion',3,'p_expresion_binaria','Parser.py',161),
  ('expresion -> expresion MULTIPLICACION expresion','expresion',3,'p_expresion_binaria','Parser.py',162),
  ('expresion -> expresion DIVISION expresion','expresion',3,'p_expresion_binaria','Parser.py',163),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_expresion_binaria','Parser.py',164),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_binaria','Parser.py',165),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_binaria','Parser.py',166),
  ('expresion -> expresion MAYOR_QUE expresion','expresion',3,'p_expresion_binaria','Parser.py',167),
  ('expresion -> expresion MENOR_QUE expresion','expresion',3,'p_expresion_binaria','Parser.py',168),
  ('expresion -> expresion MAYOR_IGUAL expresion','expresion',3,'p_expresion_binaria','Parser.py',169),
  ('expresion -> expresion MENOR_IGUAL expresion','expresion',3,'p_expresion_binaria','Parser.py',170),
  ('expresion -> expresion IGUAL_IGUAL expresion','expresion',3,'p_expresion_binaria','Parser.py',171),
  ('expresion -> expresion DIFERENTE expresion','expresion',3,'p_expresion_binaria','Parser.py',172),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_unaria','Parser.py',181),
  ('expresion -> PARENTESIS_IZQ expresion PARENTESIS_DER','expresion',3,'p_expresion_paren','Parser.py',185),
  ('expresion -> LITERAL_ENTERO','expresion',1,'p_expresion_literal','Parser.py',189),
  ('expresion -> LITERAL_DECIMAL','expresion',1,'p_expresion_literal','Parser.py',190),
  ('expresion -> LITERAL_CADENA','expresion',1,'p_expresion_literal','Parser.py',191),
  ('expresion -> LITERAL_BOOLEANO','expresion',1,'p_expresion_literal','Parser.py',192),
  ('expresion -> IDENTIFICADOR','expresion',1,'p_expresion_identificador','Parser.py',197),
  ('lista_expresiones -> lista_expresiones COMA expresion','lista_expresiones',3,'p_lista_expresiones','Parser.py',202),
  ('lista_expresiones -> expresion','lista_expresiones',1,'p_lista_expresiones','Parser.py',203),
  ('declaracion_simple -> TIPO IDENTIFICADOR PUNTO_COMA','declaracion_simple',3,'p_declaracion_simple','Parser.py',214),
  ('declaracion_con_asignacion -> TIPO IDENTIFICADOR ASIGNACION expresion PUNTO_COMA','declaracion_con_asignacion',5,'p_declaracion_con_asignacion','Parser.py',224),
  ('asignacion -> IDENTIFICADOR ASIGNACION expresion PUNTO_COMA','asignacion',4,'p_asignacion','Parser.py',234),
  ('constante -> CONSTANTE IDENTIFICADOR ASIGNACION expresion PUNTO_COMA','constante',5,'p_constante','Parser.py',249),
]
